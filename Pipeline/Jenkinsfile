pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials')
        GIT_REPO_URL = 'https://github.com/arimateiajuniorunifor/controle-ingest-o-h2O.git'
        GIT_BRANCH = 'main'
        GIT_CREDENTIALS_ID = '2e1d8568-5348-45ff-8336-11103c08687b'
    }

    stages {
        stage('Prepare Workspace') {
            steps {
                script {
                    deleteDir()
                }
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: GIT_CREDENTIALS_ID, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh """
                        git init
                        git remote add origin ${GIT_REPO_URL}
                        git fetch --all
                        git reset --hard origin/${GIT_BRANCH}
                        """
                    }
                }
            }
        }

        stage('Verify Clone') {
            steps {
                script {
                    sh 'ls -al'
                    sh 'pwd'
                }
            }
        }

        stage('Verify Docker') {
            steps {
                script {
                    sh 'docker info'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    dir('controle-ingest-o-h2O') {
                        sh 'docker-compose up --build -d'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'docker exec controle-h2o_backend ./run-tests.sh'
                }
            }
        }

        stage('Build and Push Docker Images') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                script {
                    dir('controle-ingest-o-h2O') {
                        sh 'docker-compose build'
                        sh """
                        docker login -u ${DOCKER_HUB_CREDENTIALS_USR} -p ${DOCKER_HUB_CREDENTIALS_PSW}
                        docker-compose push
                        """
                    }
                }
            }
        }

        stage('Run Application') {
            when {
                expression { currentBuild.result == 'SUCCESS' }
            }
            steps {
                script {
                    dir('controle-ingest-o-h2O') {
                        sh 'docker-compose up -d app_backend'
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                def message = currentBuild.result == 'SUCCESS' ? "Build and Tests Passed" : "Build or Tests Failed"
                sendTelegramNotification(message)
                sendSlackNotification(message)
            }
        }
    }
}

def sendTelegramNotification(message) {
    sh """
    curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
    -d chat_id=${TELEGRAM_CHAT_ID} \
    -d text="${message}"
    """
}

def sendSlackNotification(message) {
    sh """
    curl -X POST --data-urlencode "payload={\\"text\\": \\"${message}\\"}" ${SLACK_WEBHOOK_URL}
    """
}
